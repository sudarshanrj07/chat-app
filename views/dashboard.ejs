<%- include('layouts/header.ejs') %>

<h2 class="mb-4">Hi, <%= user.name %></h2>
<div class="row">
	<div class="col-md-4">
        
        <input type="text" id="searchInput" class="form-control mb-3" placeholder="Search users">
		<ul class="list-group" id="userList">
            
			<% if(users.length>0){ for(let i =0; i<users.length;i++){ %>
			<li class="list-group-item cursor-pointer user-list" data-id="<%= users[i]._id %>" >
                <img src="<%= "http://localhost:3000/"+users[i].image %>" alt="" width="50px" height="50px">
                <%= users[i].name %>
                <% 
                    if(users[i].is_online === "1"){
                        %>
                        <sup class="online-status" id="<%= users[i]._id %>-status">Online</sup>
                        <%
                    }else{
                        %>
                        <sup class="offline-status" id="<%= users[i]._id %>-status">Offline</sup>
                        <%
                    }
                %>
            </li>
			<% } } %>
		</ul>
	</div>
	<div class="col-md-8">
        <h3 class="start-head">click to start chat</h3>
        <div class="chat-section">
            
                <input type="text" id="messageSearch" class="form-control" placeholder="Search message..." />
            
            <div id="chat-container" class="chat-container">
                
            </div class="form-control mb-3">
            <form action="" id="chat-form" >
                <label class="uploadIcon">
                    <img src="http://files.softicons.com/download/toolbar-icons/mono-general-icons-4-by-custom-icon-design/ico/upload.ico" onClick="$('#image').click();" />
                  </label>
                <input type="text" name="message" id="message" class="border" placeholder="Enter message" enctype="multipart/form-data"/>
                <input type="submit" value="Send" style=" width:9%" class="btn btn-primary"/>
                <input type="file" name="image" id="image" style="visibility:hidden"/>
            </form>            
        </div>
        
    </div>
</div>

 <!-- delete Modal -->
  <div class="modal fade" id="deleteMessageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLongTitle">Delete Message</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form id="delete-message-form">
        <div class="modal-body">
            <input type="hidden" name="id" id="delete-message-id">
            <p>Delete Message?</p>
            <p><b id="delete-message"></b></p>
            </div>
            <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-danger">Delete</button>
            </div>
        </form>
      </div>
    </div>
  </div>


<!-- edit Modal -->
<div class="modal fade" id="editMessageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLongTitle">Edit Message</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form id="edit-message-form">
        <div class="modal-body">
            <input type="hidden" name="id" id="edit-message-id">
            <input type="text" name="message" id="update-message" placeholder="Enter Message" required>
           
            </div>
            <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Update</button>
            </div>
        </form>
      </div>
    </div>
  </div>  
<script>
    const sender_id = '<%= user._id %>';
    let receiver_id;
    const socket = io('/user-namespace',{
      auth: { token: sender_id,}
    });
    let lastMessageId;

    $(document).ready(function() {
    $('#searchInput').on('input', function() {

        const query = $(this).val().toLowerCase();

        $('.user-list').each(function() {
            const userName = $(this).text().toLowerCase();
            
            if (userName.includes(query)) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
        });
    });

    $(document).ready(function() {
    $('#messageSearch').on('input', function() {
        const query = $(this).val().toLowerCase();  

       
        $('.current-user-chat, .distance-user-chat').each(function() {
            const message = $(this).text().toLowerCase();  
            const messageId = $(this).attr('id');
            
            if (message.includes(query)) {  
                  $("#"+messageId)[0].scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
                
            }
        });
    });
});


    $(document).ready(()=>{
        $(".user-list").click(function(){
            let userId = $(this).attr("data-id");
            receiver_id = userId;
            $(".start-head").hide();
            $(".chat-section").show();
            socket.emit("getChatHistory", {sender_id: sender_id, receiver_id: receiver_id});
            $(".user-list").removeClass("list-group-item-dark");  // Remove highlight from all users
            $(this).addClass("list-group-item-dark");
            
        });
    });
    socket.on('getOnlineUser', (data)=>{
        $('#'+data.user_id+'-status').text('Online');
        $('#'+data.user_id+'-status').removeClass('offline-status');
        $('#'+data.user_id+'-status').addClass('online-status');
    });

    socket.on('getOfflineUser', (data)=>{
        $('#'+data.user_id+'-status').text('Offline');
        $('#'+data.user_id+'-status').removeClass('online-status');
        $('#'+data.user_id+'-status').addClass('offline-status');
    });



    $('#chat-form').submit((e)=>{
        event.preventDefault();
        const message = $('#message').val();
        const file = $('#image')[0].files[0];
    
        if(message){
        $.ajax({
            url:'/storeChat',
            type: 'POST',
            data:{sender_id:sender_id, receiver_id:receiver_id, message: message},
            
            success: (response)=>{
                if(response.success){
                    $('#message').val("");
                    const chat = response.data.message;
                    const html = `
                    <div class="current-user-chat" id='`+response.data._id+`'>
                    <h5> <i class="fa fa-trash" aria-hidden="true" data-id='`+response.data._id+`' data-toggle="modal" data-target="#deleteMessageModal"></i>
                        <i class="fa fa-edit" aria-hidden="true" data-id='`+response.data._id+`' data-msg='`+chat+`'data-toggle="modal" data-target="#editMessageModal"></i>
                        <span>${chat}</span> 
                        
                        <h5>
                    </div>`;
                    $("#chat-container").append(html);
                
                    socket.emit("newChat", response.data);
                    scrollChat();
                }else alert(data.msg)
            }
        });}

        if (file) {
        const formData = new FormData();
        formData.append('image', file); // Add the file to the FormData object
        formData.append('sender_id', sender_id); // Add other form data (like sender_id, receiver_id)
        formData.append('receiver_id', receiver_id);
                    
        $.ajax({
            url:'/storeImage',
            type: 'POST',
            data:formData,
            processData: false,  
            contentType: false,  
            success: (response)=>{
                if(response.success){
                    $('#image').val("");
                    const chat =  "http://localhost:3000/images/"+response.data.message;
                    const html = `
                    <div class="current-user-chat" id='`+response.data._id+`'>
                        <i class="fa fa-trash" aria-hidden="true" data-id='`+response.data._id+`' data-toggle="modal" data-target="#deleteMessageModal"></i>    
                    <img src="${chat}" alt width="300px" height="200px">
                    
                    </div>`;
                    $("#chat-container").append(html);
                    socket.emit("newChat", response.data);
                    scrollChat();
                }else alert(data.msg)
            }
        });
        }
    
    });

    socket.on('loadNewChat',(data)=>{
   
      
        if(sender_id == data.receiver_id && receiver_id == data.sender_id){
            let html = ""
            if((data.message.split('.').pop())== 'jpg'){
                    html = `<div class="distance-user-chat" id='`+data._id+`'>
                        <img src="http://localhost:3000/images/`+data.message+`" alt width="300px" height="200px">
                        </div>`;                       
                }
                else{
                html = `<div class="distance-user-chat" id='`+data._id+`'>
                    <h5> ${data.message} <h5>
                    </div>`;
                } 
            $("#chat-container").append(html);
            scrollChat();
        }    
    });


    




    //load intitial chat history
    socket.on('postChatHistory', (data)=>{
        
        $('#chat-container').html("")
        const chatHistory = data.chats.reverse();;
        lastMessageId = chatHistory[0]._id;
        let html ="";
        for(let x=0; x<chatHistory.length;x++){
            const addClass = chatHistory[x].sender_id == sender_id ? 'current-user-chat' : 'distance-user-chat';
            if((chatHistory[x].message.split('.').pop())== 'jpg'){
                html+= `<div class='`+addClass+`' id='`+chatHistory[x]._id+`' >`
                    if(chatHistory[x].sender_id == sender_id)
                    html+= ` <i class="fa fa-trash" aria-hidden="true" data-id='`+chatHistory[x]._id+`' data-toggle="modal" data-target="#deleteMessageModal"></i>`
                    
                    html+=`<img src="http://localhost:3000/images/`+chatHistory[x].message+`" alt width="300px" height="200px">
                    
                    </div>`;
                    
                       
            }
            else{
            html+= `<div class='`+addClass+`' id='`+chatHistory[x]._id+`' >
               <h5>`;
                 if(chatHistory[x].sender_id == sender_id)
                    html+= ` <i class="fa fa-trash" aria-hidden="true" data-id='`+chatHistory[x]._id+`' data-toggle="modal" data-target="#deleteMessageModal"></i>
                    <i class="fa fa-edit" aria-hidden="true" data-id='`+chatHistory[x]._id+`'  data-msg='`+chatHistory[x].message+`'data-toggle="modal" data-target="#editMessageModal"></i>
                `;
                
                
                 
            html+= `<span>`+chatHistory[x].message+`</span><h5>
            </div>`;
        }
        }
        $("#chat-container").prepend(html);
        scrollChat();
    });

    function scrollChat(){
        $('#chat-container').animate({
            scrollTop:$('#chat-container').offset().top + $('#chat-container')[0].scrollHeight
        },0);
    }

    $('#chat-container').on('scroll', function() {
    // Trigger when within 50px of the top
    // console.log("inside btn");
    // console.log(lastMessageId);
    if ($(this).scrollTop() === 0) {
        socket.emit("getChatHistory2", {sender_id: sender_id, receiver_id: receiver_id, message_id:lastMessageId});
    }
    });

        //load remaining chat history
        socket.on('allChatHistory', (data)=>{
        const chatHistory = data.chats.reverse();;
        lastMessageId = chatHistory[0]._id;
        let html ="";
        for(let x=0; x<chatHistory.length;x++){
            const addClass = chatHistory[x].sender_id == sender_id ? 'current-user-chat' : 'distance-user-chat';
            if((chatHistory[x].message.split('.').pop())== 'jpg'){
                html+= `<div class='`+addClass+`' id='`+chatHistory[x]._id+`' >`;
                    if(chatHistory[x].sender_id == sender_id)
                    html+= ` <i class="fa fa-trash" aria-hidden="true" data-id='`+chatHistory[x]._id+`' data-toggle="modal" data-target="#deleteMessageModal"></i>`;
                    
                    html+=`<img src="http://localhost:3000/images/`+chatHistory[x].message+`" alt width="300px" height="200px">
                    
                    </div>`;
                    
                       
            }
            else{
            html+= `<div class='`+addClass+`' id='`+chatHistory[x]._id+`' >
               <h5>`;
                 if(chatHistory[x].sender_id == sender_id)
                    html+= ` <i class="fa fa-trash" aria-hidden="true" data-id='`+chatHistory[x]._id+`' data-toggle="modal" data-target="#deleteMessageModal"></i>
                    <i class="fa fa-edit" aria-hidden="true" data-id='`+chatHistory[x]._id+`'  data-msg='`+chatHistory[x].message+`'data-toggle="modal" data-target="#editMessageModal"></i>
                `;
                
                
                 
            html+= `<span>`+chatHistory[x].message+`</span> <h5>
            </div>`;
        }
        }
        $("#chat-container").prepend(html);
        
    });

    $(document).on('click', '.fa-trash', function(){
        let msg = $(this).parent().text();
        $('#delete-message').text(msg);
        $('#delete-message-id').val($(this).attr('data-id'));
    });


    $('#delete-message-form').submit((e)=>{
        e.preventDefault();

        const id = $('#delete-message-id').val();
       
        $.ajax({
        url:'/deleteMessage',
        type: 'POST',
        data:{id: id},
        success: (response)=>{
            if(response.success){
                
               $('#'+id).remove();
               $('#deleteMessageModal').modal('hide');
               socket.emit('messageDeleted', id);
            }else alert(response.msg)
        }
    });
    });

    socket.on('messageDeletedSuccess', (id)=>{
        $('#'+id).remove();
    })

    $(document).on('click', '.fa-edit', function(){
       
        $('#edit-message-id').val($(this).attr('data-id'));
        $('#update-message').val($(this).attr('data-msg'));
    });


    $('#edit-message-form').submit((e)=>{
        e.preventDefault();

        const id = $('#edit-message-id').val();
        const msg = $('#update-message').val();
       
        $.ajax({
        url:'/editMessage',
        type: 'POST',
        data:{id: id, editedMessage: msg},
        success: function(response){
            if(response.success){
               $('#editMessageModal').modal('hide');
               $('#'+id).find('span').text(msg);
               $('#'+id).find('.fa-edit').attr('data-msg',msg)
               socket.emit('messageUpdated', {id: id, editedMessage: msg});
            }else alert(response.msg)
        }
    });
    });
    socket.on('messageUpdatedSuccess', (data)=>{
       
        $('#'+data.id).find('span').text(data.editedMessage);
    })


</script>
<%- include('layouts/footer.ejs') %>
